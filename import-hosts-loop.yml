- name: print vars
  debug: var=csv
- name: set facts
  set_fact:
    srv_templates: "{{ csv.srv_template.split(',') }}"
    host_groups: "{{ csv.srv_hostgroup.split(',')  }} + [ 'csv' ]"
    srv_tags: "{{ csv.srv_tag.split(',') | default('')}}"
    interface_type: "{{ csv.srv_type | default('agent') }}"
    snmp_community: "{{ csv.srv_snmp_community | default('{$SNMP_COMMUNITY}', true) }}"
- name: set csv filename tag
  set_fact: 
    srv_tags_dict: 
      - tag: csv
        value: "{{ csv_path }}"
- name: split all tags into needed dict format
  set_fact:
    srv_tags_dict: "{{ srv_tags_dict|default([]) + [{'tag': item.split(':')[0],'value': item.split(':')[1]|default('')}] }}"
  with_items:
  - "{{ srv_tags }}"
  when: srv_tags[0] != ''

- name: Create host groups
  local_action:
    module: community.zabbix.zabbix_group
    validate_certs: no
    server_url: '{{ server_url }}'
    login_user: '{{ login_user }}'
    login_password: '{{ login_password }}'
    state: present
    host_groups: '{{ host_groups }}'
  when: maintain_hostgroups|bool

- name: "Delete host {{ csv.srv_name }}"
  local_action:
    module: community.zabbix.zabbix_host
    validate_certs: no
    server_url: '{{ server_url }}'
    login_user: '{{ login_user }}'
    login_password: '{{ login_password }}'
    host_name: '{{ csv.srv_name }}'
    state: absent
  when: recreate_hosts|bool

- block:
  - name: use windows agent template if none is given
    set_fact:
      srv_templates: "['Template OS Windows by Zabbix agent']"
    when: srv_templates[0] == ''
  - name: "Configure agent host {{ csv.srv_name }}"
    local_action:
      module: community.zabbix.zabbix_host
      validate_certs: no
      server_url: '{{ server_url }}'
      login_user: '{{ login_user }}'
      login_password: '{{ login_password }}'
      host_name: '{{ csv.srv_name }}'
      description: '{{ csv.srv_desc }}'
      tags: '{{ srv_tags_dict }}'
      host_groups: '{{ host_groups }}'
      link_templates: '{{ srv_templates }}'
      status: enabled
      state: present
      interfaces:
      - type: 1
        main: 1
        useip: 1
        ip: '{{ csv.srv_ip }}'
        dns: '{{ csv.srv_dns }}'
  when: csv.srv_check_type == 'agent'   
        

- block:
  - name: use generic snmp template if none is given
    set_fact:
      srv_templates: "['Template Module Generic SNMP']"
    when: srv_templates[0] == ''
  - name: "Configure snmp host {{ csv.srv_name }}"
    local_action:
      module: community.zabbix.zabbix_host
      validate_certs: no
      server_url: '{{ server_url }}'
      login_user: '{{ login_user }}'
      login_password: '{{ login_password }}'
      host_name: '{{ csv.srv_name }}'
      description: '{{ csv.srv_desc }}'
      tags: '{{ srv_tags_dict }}'
      host_groups: '{{ host_groups }}'
      link_templates: '{{ srv_templates }}'
      status: enabled
      state: present
      interfaces:
      - type: 2
        main: 1
        useip: 1
        ip: '{{ csv.srv_ip }}'
        dns: '{{ csv.srv_dns }}'
        port: 161
        details:
          version: 2
          bulk: 1
          community: "{{ snmp_community }}"
  when: csv.srv_check_type == 'snmp' 


